package frontend;import java.io.DataOutput;import java.io.DataOutputStream;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;import visitor.*;import syntaxtree.Program;import frontend.generated.*;public class MainAST {    public static void main(String [] args) throws IOException {        Program root;        try {            // from standard input            if (args.length == 0)                root = new frontend.generated.RamParser(System.in).Goal();            else {                java.io.InputStream is = new java.io.FileInputStream(new java.io.File(args[0]));                root = new frontend.generated.RamParser(is).Goal();            }            System.out.println("Parsing successful!");                        // prints original source program (white spacing is guessed)            root.accept(new PrettyPrintVisitor());                          // prints AST            root.accept(new ASTPrintVisitor());                        // Python generation commented out because it will no longer compile.            // This visitor now requires a symbol table, which is not available in this class.            // Passing null to the python visitor would cause errors.            /*                         PythonVisitor visitor = new PythonVisitor();            root.accept(visitor);            String output = visitor.toString();               output+= "main()";            System.out.println(output);                        OutputStream outputStream = new FileOutputStream(new File(visitor.getName() + ".py"));            DataOutput dataStream = new DataOutputStream(outputStream);            dataStream.writeBytes(output);                        outputStream.close();                        */                    }        catch (ParseException e) {            System.out.println(e.toString());        }        catch (java.io.FileNotFoundException e) {            System.out.println("File Not Found: "+ e);        }         }}