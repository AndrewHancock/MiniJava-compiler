/* Generated By:JavaCC: Do not edit this line. RamParserConstants.java */
package frontend.generated;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RamParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 5;
  /** RegularExpression Id. */
  int SHORT_COMMENT = 6;
  /** RegularExpression Id. */
  int CLASS = 7;
  /** RegularExpression Id. */
  int PUBLIC = 8;
  /** RegularExpression Id. */
  int STATIC = 9;
  /** RegularExpression Id. */
  int VOID = 10;
  /** RegularExpression Id. */
  int MAIN = 11;
  /** RegularExpression Id. */
  int STRING = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int BOOL = 15;
  /** RegularExpression Id. */
  int IF = 16;
  /** RegularExpression Id. */
  int ELSE = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int FOREACH = 19;
  /** RegularExpression Id. */
  int EXCLAMATION = 20;
  /** RegularExpression Id. */
  int PRINT = 21;
  /** RegularExpression Id. */
  int PRINTLN = 22;
  /** RegularExpression Id. */
  int LSQPAREN = 23;
  /** RegularExpression Id. */
  int RSQPAREN = 24;
  /** RegularExpression Id. */
  int DOT = 25;
  /** RegularExpression Id. */
  int LENGTH = 26;
  /** RegularExpression Id. */
  int TRUE = 27;
  /** RegularExpression Id. */
  int FALSE = 28;
  /** RegularExpression Id. */
  int THIS = 29;
  /** RegularExpression Id. */
  int NEW = 30;
  /** RegularExpression Id. */
  int LBRACE = 31;
  /** RegularExpression Id. */
  int RBRACE = 32;
  /** RegularExpression Id. */
  int LPAREN = 33;
  /** RegularExpression Id. */
  int RPAREN = 34;
  /** RegularExpression Id. */
  int SEMICOLON = 35;
  /** RegularExpression Id. */
  int AND = 36;
  /** RegularExpression Id. */
  int OR = 37;
  /** RegularExpression Id. */
  int LESSTHAN = 38;
  /** RegularExpression Id. */
  int LESSTHANEQUALS = 39;
  /** RegularExpression Id. */
  int PLUS = 40;
  /** RegularExpression Id. */
  int PLUSEQUALS = 41;
  /** RegularExpression Id. */
  int MINUS = 42;
  /** RegularExpression Id. */
  int TIMES = 43;
  /** RegularExpression Id. */
  int COMMA = 44;
  /** RegularExpression Id. */
  int EQUAL = 45;
  /** RegularExpression Id. */
  int EQUALITY = 46;
  /** RegularExpression Id. */
  int ASSIGN = 47;
  /** RegularExpression Id. */
  int COLON = 48;
  /** RegularExpression Id. */
  int DIGIT = 49;
  /** RegularExpression Id. */
  int LETTER = 50;
  /** RegularExpression Id. */
  int IDENTIFIER = 51;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\n\"",
    "\"\\t\"",
    "\" \"",
    "\"\\r\"",
    "<COMMENT>",
    "<SHORT_COMMENT>",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"return\"",
    "\"int\"",
    "\"bool\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"foreach\"",
    "\";\"",
    "\"print\"",
    "\"println\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"length\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"new\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"!\"",
    "\"and\"",
    "\"or\"",
    "\"lt\"",
    "\"lte\"",
    "\"+\"",
    "\"+=\"",
    "\"-\"",
    "\"*\"",
    "\",\"",
    "\"=\"",
    "\"==\"",
    "\":=\"",
    "\":\"",
    "<DIGIT>",
    "<LETTER>",
    "<IDENTIFIER>",
    "<INTEGER_LITERAL>",
  };

}
