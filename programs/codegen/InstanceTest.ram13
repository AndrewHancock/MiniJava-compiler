class InstanceTest
{
	public static void main(String[] args)
	{
		println(new TestRunner().runTest())!
	}
}

class TestRunner
{
	InstanceTortureTest test!
	public int runTest()
	{
		int tmp!
		test = new InstanceTortureTest()!
		tmp = test.init()!
		println(test.testPlusEquals())!
		println(test.testMath())!
		println(test.testCall())!
		println(test.testEquality())!
		return 0!
	}
}

class SomeObject
{
	bool hasValue!
	
	//Test call chaining!
	public SomeObject setHasValue(bool newHasValue)
	{
		hasValue = newHasValue!		
		return this!
	}
	
	public bool getHasValue()
	{
		return hasValue!
	}
}

class InstanceTortureTest
{
	int instanceInt!
	int anotherinstanceInt!
	bool instanceBool!
	int[] intArray!
	SomeObject someObject!
	public int init()
	{
		int i!		
		instanceInt = 1!
		i = 1!
		intArray = new int[5]!
		
		//Had some problems with .length in the last project so we want to test that.
		while(i lt intArray.length - 1)
		{
			intArray[i] = i!
			i += 1!
		}
		
		intArray[intArray.length - 1] = intArray.length!
		someObject = new SomeObject()!
		someObject = someObject.setHasValue(true)!		
		return 0!
	}
	
	public int testPlusEquals()
	{		
		instanceInt = 0!
		while(instanceInt lte 5)
			instanceInt += 1!
			
		return instanceInt!		
	}
	
	public int testMath()
	{
		instanceInt = 5!
		anotherinstanceInt = intArray.length - 1 + 2 - 1 + 3 * 1!
		
		return anotherinstanceInt + intArray[2] - instanceInt!
	}
	
	public int testCall()
	{
		int result!
		bool boolean!
		boolean = someObject.setHasValue(false).setHasValue(true).setHasValue(false).setHasValue(true).setHasValue(true).getHasValue()!
		if(boolean)
			result = 1!
		else
			result = 0!
			
		return result!
	}	
	
	public int testEquality()
	{
		int result!
		instanceBool = true!
		if(instanceBool or false eq instanceBool and true)
			result = 1!
		else
			result = 0!
			
		if(instanceInt eq 5 or 2 eq 1)
			result += 1!
		else
			result += 0!
		return result!
	}
}
